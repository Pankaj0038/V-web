<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>V-web</title>
    <link rel="stylesheet" href="./css/index.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body>
    <div class="bgimg"></div>
    <div class="bgblur">
    <nav>
        <h1 data-value="GUMN4M1">GUMN4M1</h1>
        <a href="./login">login</a>
    </nav>
    <main>
        <div class="left">
            <div class="container">
                <h4>What is <i>IDOR</i> ?</h4>
                <h5>Insecure direct object references (IDOR) are a type of access control vulnerability that arises when an application uses user-supplied input to access objects directly.</h5>
            </div>
            <div class="container">
                <p>To learn more check out my youtube channel:</p>
                 <iframe width="560" height="315" src="https://www.youtube.com/embed/hiBKPPmpvSo?si=KWFh_5euUdtkvR1D" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
            </div>
            <div class="container">
                <p>The term IDOR was popularized by its appearance in the OWASP 2007 Top Ten. However, it is just one example of many access control implementation mistakes that can lead to access controls being circumvented. IDOR vulnerabilities are most commonly associated with horizontal privilege escalation, but they can also arise in relation to vertical privilege escalation. </p>
            </div>
        </div>
        <div class="right">
            <div class="racontainer">
                <p>Connect with me:</p>
                <a href="#" class="fa fa-linkedin"></a>
                <a href="#" class="fa fa-youtube"></a>
                <a href="#" class="fa fa-instagram"></a>
                <a href="#" class="fa fa-github"></a>
                <a href="#" class="fa fa-medium"></a>
            </div>
            <div class="rcontainer">
                <audio controls>
                    <source src="./images/idor.mp3" type="audio/mpeg">
                </audio>
            </div>
            <div class="rcontainer">
                <p>Check out my other projects:</p>
                <h3><a href="https://github.com/Pankaj0038/Thr34t">Thr34t</a></h3>
                <li>This repository is used to store all the real life cyber security practical experiment that I have done.</li>
                <li>Website link: <a href="https://pankaj0038.github.io/Thr34t/pages/index.html">Website</a></li>
                <h3><a href="https://github.com/Pankaj0038/dcodeKi">dcodeKi</a></h3>
                <li>Python GUI based encoder-decoder tool</li>
                <li>Website link: <a href="https://pankaj0038.github.io/dcodeKi/">Website</a></li>
            </div>
            <div class="racontainer">
                <img id="dor" src="../images/idor.png">
            </div>
        </div>
    </main>
    </div>
     <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function() {
            const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            const mytext = document.querySelector('h1');
            let interval;

            mytext.addEventListener('mouseenter', function() {
                clearInterval(interval); // Clear any existing interval

                // Reset text to original value
                mytext.innerText = mytext.dataset.value;

                let iteration = 0;
                interval = setInterval(() => {
                    mytext.innerText = mytext.innerText.split("")
                        .map((letter, index) => {
                            if (index < iteration) {
                                return mytext.dataset.value[index];
                            }
                            return letters[Math.floor(Math.random() * 26)];
                        })
                        .join("");
                    if (iteration >= mytext.dataset.value.length) {
                        clearInterval(interval);
                    }
                    iteration += 1 / 3;
                }, 30);
            });
        });
    </script>


</body>
</html>
